HEY ITS WEDNESDAY TODAY!!! HAVE A NICE DAY
DECLARE
VENAME VARCHAR2(20);
VSAL EMP.SAL%TYPE;
BEGIN
VENAME:='&NAME1';
SELECT SAL INTO VSAL FROM EMP WHERE FIRST_NAME=VENAME;
DBMS_OUTPUT.PUT_LINE(VSAL);
END;
CREATE OR REPLACE PROCEDURE PROCE1
AS
VENAME DATE;
VSAL EMP.SAL%TYPE;
BEGIN
SELECT SAL INTO VSAL FROM EMP WHERE FIRST_NAME='VALLI';
IF(VSAL<5000) THEN
PROCE1;
END IF;
CREATE OR REPLACE PROCEDURE PROCE3
(PENAME VARCHAR2,VSD NUMBER)
AS
VSAL EMP.SAL%TYPE;
BEGIN
SELECT SAL INTO VSAL FROM EMP WHERE FIRST_NAME=PENAME;
DBMS_OUTPUT.PUT_LINE('OLD SAL '||VSAL);
IF(VSAL<8000) THEN
VSAL:=VSAL+VSD;
DBMS_OUTPUT.PUT_LINE('NEW SAL '||VSAL);
END IF;
END;
CREATE OR REPLACE PROCEDURE OUT_DEMO(PDNO NUMBER,PTOT OUT NUMBER)
AS
BEGIN
SELECT COUNT(EMP_ID) INTO PTOT FROM EMP WHERE DEPT_ID=PDNO;
END;


CREATE OR REPLACE FUNCTION CUBE_FUN(A NUMBER)
  RETURN NUMBER
  AS
  BEGIN
   RETURN A*A*A;
    END;


CREATE OR REPLACE FUNCTION EMP_NO(C NUMBER)
RETURN C
AS 
BEGIN
SELECT COUNT(DEPT_ID) INTO C FROM EMP;
RETURN C;
END;



DECLARE
A NUMBER(10,2);
B NUMBER(10,2);
BEGIN
A:=2;
B:=A/0;
DBMS_OUTPUT.PUT_LINE(B);
EXCEPTION
WHEN ZERO_DIVIDE THEN
DBMS_OUTPUT.PUT_LINE('DIVIDE BY ZER EXCEPTION');
END;



DECLARE
VSAL NUMBER(10,2);
LOWSAL EXCEPTION;
BEGIN
SELECT SAL INTO VSAL FROM EMP WHERE FIRST_NAME='VALLI';
IF VSAL<30000 THEN
RAISE LOWSAL;
END IF;
EXCEPTION
WHEN LOWSAL THEN
DBMS_OUTPUT.PUT_LINE('THE SAL IS LOW');
END;
CREATE OR REPLACE TRIGGER TR1
BEFORE INSERT ON EMP2
BEGIN
DBMS_OUTPUT.PUT_LINE('THIS IS INSERT TRIGGER');
ENDS;


